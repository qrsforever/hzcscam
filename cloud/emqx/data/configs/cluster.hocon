authentication = [
  {
    backend = "mysql"
    database = "mqtt"
    mechanism = "password_based"
    password = "123456"
    password_hash_algorithm {name = "sha256", salt_position = "suffix"}
    pool_size = 8
    query = "SELECT password_hash, salt FROM mqtt_user where username = ${username} LIMIT 1"
    query_timeout = "5s"
    server = "mysql:3306"
    ssl {enable = false, verify = "verify_peer"}
    username = "root"
  },
  {
    backend = "built_in_database"
    enable = true
    mechanism = "password_based"
    password_hash_algorithm {name = "sha256", salt_position = "suffix"}
    user_id_type = "username"
  }
]
authorization {
  cache {
    enable = true
    max_size = 32
    ttl = "1m"
  }
  deny_action = "ignore"
  no_match = "allow"
  sources = [
    {
      database = "mqtt"
      enable = true
      password = "123456"
      pool_size = 8
      query = "SELECT action, permission, topic FROM mqtt_acl where username = ${username}"
      server = "mysql:3306"
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = "5s"
        log_level = "notice"
        reuse_sessions = true
        secure_renegotiate = true
        verify = "verify_peer"
        versions = ["tlsv1.3", "tlsv1.2"]
      }
      type = "mysql"
      username = "root"
    },
    {enable = true, type = "built_in_database"},
    {
      enable = false
      path = "data/authz/acl.conf"
      type = "file"
    }
  ]
}
bridges {
  webhook {
    tomysql {
      connect_timeout = "15s"
      enable = true
      enable_pipelining = 100
      headers {"content-type" = "application/json"}
      max_retries = 2
      method = "post"
      pool_size = 8
      pool_type = "random"
      resource_opts {
        auto_restart_interval = "60s"
        health_check_interval = "15s"
        inflight_window = 100
        max_buffer_bytes = "1GB"
        query_mode = "async"
        request_timeout = "15s"
        start_after_created = "true"
        start_timeout = "5s"
        worker_pool_size = 4
      }
      ssl {
        ciphers = []
        depth = 10
        enable = false
        hibernate_after = "5s"
        log_level = "notice"
        reuse_sessions = true
        secure_renegotiate = true
        verify = "verify_peer"
        versions = ["tlsv1.3", "tlsv1.2"]
      }
      url = "http://flaskapp:8686/mqtt"
    }
  }
}
rule_engine {
  ignore_sys_message = true
  jq_function_default_timeout = "10s"
  rules {
    hook_campi {
      actions = ["webhook:tomysql"]
      description = ""
      enable = true
      metadata {created_at = 1685529146599}
      name = ""
      sql = "SELECT\n  *\nFROM\n  \"campi/#\""
    }
  }
}
